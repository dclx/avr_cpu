//
//AVRASM ver. 2.2.0  fn30.asm Sat Oct 20 05:53:26 2018
//
                // 
                // 
                // ; test for asr/lsr/ror/swap
                // ;---------------------------
@000000 ec03    //     ldi  r16,0xc3
@000001 e483    //     ldi  r24,0x43
@000002 2e70    //     mov  r7 ,r16
@000003 2e88    //     mov  r8 ,r24
@000004 ec02    //     ldi  r16,0xc2
@000005 e482    //     ldi  r24,0x42
                // 
@000006 2c67    //     mov  r6 ,r7
@000007 2c98    //     mov  r9 ,r8
@000008 2f10    //     mov  r17,r16
@000009 2f98    //     mov  r25,r24
                // 
@00000a 9465    //     asr  r6
@00000b 9495    //     asr  r9
@00000c 9515    //     asr  r17
@00000d 9595    //     asr  r25
                // ;-------------------
@00000e 2c57    //     mov  r5 ,r7
@00000f 2ca8    //     mov  r10,r8
@000010 2f20    //     mov  r18,r16
@000011 2fa8    //     mov  r26,r24
                // 
@000012 9456    //     lsr  r5
@000013 94a6    //     lsr  r10
@000014 9526    //     lsr  r18
@000015 95a6    //     lsr  r26
                // ;-------------------
@000016 2c47    //     mov  r4 ,r7
@000017 2cb8    //     mov  r11,r8
@000018 2f30    //     mov  r19,r16
@000019 2fb8    //     mov  r27,r24
                // 
@00001a 9447    //     ror  r4
@00001b 94b7    //     ror  r11
@00001c 9537    //     ror  r19
@00001d 95b7    //     ror  r27
                // ;-------------------
@00001e 2c37    //     mov  r3 ,r7
@00001f 2e28    //     mov  r2 ,r24
@000020 2e10    //     mov  r1 ,r16
@000021 2e08    //     mov  r0 ,r24
                // 
@000022 9435    //     asr  r3
@000023 9427    //     ror  r2
@000024 9415    //     asr  r1
@000025 9407    //     ror  r0
                // ;-------------------
@000026 2cc7    //     mov  r12,r7
@000027 2ed8    //     mov  r13,r24
@000028 2ee0    //     mov  r14,r16
@000029 2ef8    //     mov  r15,r24
                // 
@00002a 94c6    //     lsr  r12
@00002b 94d7    //     ror  r13
@00002c 94e6    //     lsr  r14
@00002d 94f7    //     ror  r15
                // ;-------------------
@00002e e442    //     ldi  r20,0x42
@00002f e75e    //     ldi  r21,0x7e
@000030 e861    //     ldi  r22,0x81
@000031 eb7d    //     ldi  r23,0xbd
                // 
@000032 2e74    //     mov  r7 ,r20
@000033 2e85    //     mov  r8 ,r21
@000034 2f06    //     mov  r16,r22
@000035 2f87    //     mov  r24,r23
                // 
@000036 9472    //     swap r7
@000037 9482    //     swap r8
@000038 9502    //     swap r16
@000039 9582    //     swap r24
                // 
@00003a 2dc7    //     mov  r28,r7
@00003b 2dd8    //     mov  r29,r8
@00003c 2fe0    //     mov  r30,r16
@00003d 2ff8    //     mov  r31,r24
                // ;-------------------
@00003e ec03    //     ldi  r16,0xc3
@00003f e483    //     ldi  r24,0x43
@000040 2e70    //     mov  r7 ,r16
@000041 2e88    //     mov  r8 ,r24
@000042 ec02    //     ldi  r16,0xc2
@000043 e482    //     ldi  r24,0x42
                // ;-------------------
@000044 9270
@000045 0100    //     sts  0x0100,r7      ; (ldi) 0xc3
@000046 9260
@000047 0101    //     sts  0x0101,r6      ; (asr) 0xc3 (cf=0)
@000048 9250
@000049 0102    //     sts  0x0102,r5      ; (lsr) 0xc3 (cf=0)
@00004a 9240
@00004b 0103    //     sts  0x0103,r4      ; (ror) 0xc3 (cf=0)
                // 
@00004c 9280
@00004d 0104    //     sts  0x0104,r8      ; (ldi) 0x43
@00004e 9290
@00004f 0105    //     sts  0x0105,r9      ; (asr) 0x43 (cf=1)
@000050 92a0
@000051 0106    //     sts  0x0106,r10     ; (lsr) 0x43 (cf=1)
@000052 92b0
@000053 0107    //     sts  0x0107,r11     ; (ror) 0x43 (cf=1)
                // 
@000054 9300
@000055 0108    //     sts  0x0108,r16     ; (ldi) 0xc2
@000056 9310
@000057 0109    //     sts  0x0109,r17     ; (asr) 0xc2 (cf=1)
@000058 9320
@000059 010a    //     sts  0x010a,r18     ; (lsr) 0xc2 (cf=1)
@00005a 9330
@00005b 010b    //     sts  0x010b,r19     ; (ror) 0xc2 (cf=1)
                // 
@00005c 9380
@00005d 010c    //     sts  0x010c,r24     ; (ldi) 0x42
@00005e 9390
@00005f 010d    //     sts  0x010d,r25     ; (asr) 0x42 (cf=0)
@000060 93a0
@000061 010e    //     sts  0x010e,r26     ; (lsr) 0x42 (cf=0)
@000062 93b0
@000063 010f    //     sts  0x010f,r27     ; (ror) 0x42 (cf=0)
                // 
@000064 9230
@000065 0110    //     sts  0x0110,r3      ; (asr) 0xc3 (cf=0)
@000066 9220
@000067 0111    //     sts  0x0111,r2      ; (ror) 0x42 (cf=1)
@000068 9210
@000069 0112    //     sts  0x0112,r1      ; (asr) 0xc2 (cf=0)
@00006a 9200
@00006b 0113    //     sts  0x0113,r0      ; (ror) 0x42 (cf=0)
                // 
@00006c 92c0
@00006d 0114    //     sts  0x0114,r12     ; (lsr) 0xc3 (cf=0)
@00006e 92d0
@00006f 0115    //     sts  0x0115,r13     ; (ror) 0x42 (cf=1)
@000070 92e0
@000071 0116    //     sts  0x0116,r14     ; (lsr) 0xc2 (cf=0)
@000072 92f0
@000073 0117    //     sts  0x0117,r15     ; (ror) 0x42 (cf=0)
                // 
@000074 9340
@000075 0118    //     sts  0x0118,r20     ; (ldi) 0x42
@000076 9350
@000077 0119    //     sts  0x0119,r21     ; (ldi) 0x7e
@000078 9360
@000079 011a    //     sts  0x011a,r22     ; (ldi) 0x81
@00007a 9370
@00007b 011b    //     sts  0x011b,r23     ; (ldi) 0xbd
                // 
@00007c 93c0
@00007d 011c    //     sts  0x011c,r28     ; (swap) 0x42
@00007e 93d0
@00007f 011d    //     sts  0x011d,r29     ; (swap) 0x7e
@000080 93e0
@000081 011e    //     sts  0x011e,r30     ; (swap) 0x81
@000082 93f0
@000083 011f    //     sts  0x011f,r31     ; (swap) 0xbd
                // ;-------------------
@000084 ef0f    //     ldi  r16,0xff
@000085 9300
@000086 ffff    //     sts  0xffff,r16
                // halt:
@000087 cfff    //     rjmp halt
//
//Assembly complete, 0 errors, 0 warnings
