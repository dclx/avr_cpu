//
//AVRASM ver. 2.2.0  fn23.asm Sat Oct 20 05:53:26 2018
//
                // 
                // 
                // ; test for and/andi/or/ori/eor
                // ;-------------------------------
@000000 e303    //     ldi  r16,0x33
@000001 e686    //     ldi  r24,0x66
@000002 2e70    //     mov  r7 ,r16
@000003 2e88    //     mov  r8 ,r24
@000004 e909    //     ldi  r16,0x99
@000005 ec8c    //     ldi  r24,0xcc
                // 
@000006 e515    //     ldi  r17,0x55
@000007 e59a    //     ldi  r25,0x5a
@000008 2e61    //     mov  r6 ,r17
@000009 2e99    //     mov  r9 ,r25
@00000a ea15    //     ldi  r17,0xa5
@00000b ea9a    //     ldi  r25,0xaa
                // ;-------------------
@00000c 2c57    //     mov  r5 ,r7
@00000d 2ca8    //     mov  r10,r8
@00000e 2f20    //     mov  r18,r16
@00000f 2fa8    //     mov  r26,r24
                // 
@000010 2259    //     and  r5 ,r25
@000011 22a1    //     and  r10,r17
@000012 2129    //     and  r18,r9
@000013 21a6    //     and  r26,r6
                // ;-------------------
@000014 2c47    //     mov  r4 ,r7
@000015 2cb8    //     mov  r11,r8
@000016 2f30    //     mov  r19,r16
@000017 2fb8    //     mov  r27,r24
                // 
@000018 2a49    //     or   r4 ,r25
@000019 2ab1    //     or   r11,r17
@00001a 2939    //     or   r19,r9
@00001b 29b6    //     or   r27,r6
                // ;-------------------
@00001c 2c37    //     mov  r3 ,r7
@00001d 2cc8    //     mov  r12,r8
@00001e 2f40    //     mov  r20,r16
@00001f 2fc8    //     mov  r28,r24
                // 
@000020 2639    //     eor  r3 ,r25
@000021 26c1    //     eor  r12,r17
@000022 2549    //     eor  r20,r9
@000023 25c6    //     eor  r28,r6
                // ;-------------------
@000024 e313    //     ldi  r17,0x33
@000025 e393    //     ldi  r25,0x33
@000026 e6e6    //     ldi  r30,0x66
@000027 e6f6    //     ldi  r31,0x66
                // 
@000028 7a1a    //     andi r17,0xaa
@000029 6a9a    //     ori  r25,0xaa
@00002a 7af5    //     andi r31,0xa5
@00002b 6ae5    //     ori  r30,0xa5
                // 
@00002c 2e11    //     mov  r1 ,r17
@00002d 2e09    //     mov  r0 ,r25
@00002e 2eef    //     mov  r14,r31
@00002f 2efe    //     mov  r15,r30
                // ;-------------------
@000030 e969    //     ldi  r22,0x99
@000031 e979    //     ldi  r23,0x99
@000032 ecec    //     ldi  r30,0xcc
@000033 ecfc    //     ldi  r31,0xcc
                // 
@000034 756a    //     andi r22,0x5a
@000035 657a    //     ori  r23,0x5a
@000036 75e5    //     andi r30,0x55
@000037 65f5    //     ori  r31,0x55
                // ;-------------------
@000038 ea1a    //     ldi  r17,0xaa
@000039 ea95    //     ldi  r25,0xa5
@00003a 2e61    //     mov  r6 ,r17
@00003b 2e99    //     mov  r9 ,r25
@00003c e51a    //     ldi  r17,0x5a
@00003d e595    //     ldi  r25,0x55
                // ;-------------------
@00003e 9270
@00003f 0100    //     sts  0x0100,r7      ; (ldi) 0x33
@000040 9260
@000041 0101    //     sts  0x0101,r6      ; (ldi) 0xaa
@000042 9250
@000043 0102    //     sts  0x0102,r5      ; (and) 0x33,0xaa
@000044 9240
@000045 0103    //     sts  0x0103,r4      ; (or)  0x33,0xaa
@000046 9230
@000047 0104    //     sts  0x0104,r3      ; (eor) 0x33,0xaa
                //    ;sts  0x0105,r2
@000048 9210
@000049 0106    //     sts  0x0106,r1      ; (andi) 0x33,0xaa
@00004a 9200
@00004b 0107    //     sts  0x0107,r0      ; (ori)  0x33,0xaa
                // 
@00004c 9280
@00004d 0108    //     sts  0x0108,r8      ; (ldi) 0x66
@00004e 9290
@00004f 0109    //     sts  0x0109,r9      ; (ldi) 0xa5
@000050 92a0
@000051 010a    //     sts  0x010a,r10     ; (and) 0x66,0xa5
@000052 92b0
@000053 010b    //     sts  0x010b,r11     ; (or)  0x66,0xa5
@000054 92c0
@000055 010c    //     sts  0x010c,r12     ; (eor) 0x66,0xa5
                //    ;sts  0x010d,r13
@000056 92e0
@000057 010e    //     sts  0x010e,r14     ; (andi) 0x66,0xa5
@000058 92f0
@000059 010f    //     sts  0x010f,r15     ; (ori)  0x66,0xa5
                // 
@00005a 9300
@00005b 0110    //     sts  0x0110,r16     ; (ldi) 0x99
@00005c 9310
@00005d 0111    //     sts  0x0111,r17     ; (ldi) 0x5a
@00005e 9320
@00005f 0112    //     sts  0x0112,r18     ; (and) 0x99,0x5a
@000060 9330
@000061 0113    //     sts  0x0113,r19     ; (or)  0x99,0x5a
@000062 9340
@000063 0114    //     sts  0x0114,r20     ; (eor) 0x99,0x5a
                //    ;sts  0x0115,r21
@000064 9360
@000065 0116    //     sts  0x0116,r22     ; (andi) 0x99,0x5a
@000066 9370
@000067 0117    //     sts  0x0117,r23     ; (ori)  0x99,0x5a
                // 
@000068 9380
@000069 0118    //     sts  0x0118,r24     ; (ldi) 0xcc
@00006a 9390
@00006b 0119    //     sts  0x0119,r25     ; (ldi) 0x55
@00006c 93a0
@00006d 011a    //     sts  0x011a,r26     ; (and) 0xcc,0x55
@00006e 93b0
@00006f 011b    //     sts  0x011b,r27     ; (or)  0xcc,0x55
@000070 93c0
@000071 011c    //     sts  0x011c,r28     ; (eor) 0xcc,0x55
                //    ;sts  0x011d,r29
@000072 93e0
@000073 011e    //     sts  0x011e,r30     ; (andi) 0xcc,0x55
@000074 93f0
@000075 011f    //     sts  0x011f,r31     ; (ori)  0xcc,0x55
                // ;-------------------
@000076 ef0f    //     ldi  r16,0xff
@000077 9300
@000078 ffff    //     sts  0xffff,r16
                // halt:
@000079 cfff    //     rjmp halt
//
//Assembly complete, 0 errors, 0 warnings
